// 指定的当前proto语法的版本，有2和3

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: floatip.proto

// 指定文件生成出来的package

package floatip

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BindFloatIpToInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	InstanceId     string `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	VpcRouterId    int32  `protobuf:"varint,5,opt,name=vpc_router_id,json=vpcRouterId,proto3" json:"vpc_router_id,omitempty"`
}

func (x *BindFloatIpToInstanceReq) Reset() {
	*x = BindFloatIpToInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_floatip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindFloatIpToInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindFloatIpToInstanceReq) ProtoMessage() {}

func (x *BindFloatIpToInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_floatip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindFloatIpToInstanceReq.ProtoReflect.Descriptor instead.
func (*BindFloatIpToInstanceReq) Descriptor() ([]byte, []int) {
	return file_floatip_proto_rawDescGZIP(), []int{0}
}

func (x *BindFloatIpToInstanceReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *BindFloatIpToInstanceReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *BindFloatIpToInstanceReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *BindFloatIpToInstanceReq) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *BindFloatIpToInstanceReq) GetVpcRouterId() int32 {
	if x != nil {
		return x.VpcRouterId
	}
	return 0
}

type BindFloatIpToInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	FloatIp    string `protobuf:"bytes,3,opt,name=float_ip,json=floatIp,proto3" json:"float_ip,omitempty"`
	BindedTime string `protobuf:"bytes,4,opt,name=binded_time,json=bindedTime,proto3" json:"binded_time,omitempty"`
}

func (x *BindFloatIpToInstanceRes) Reset() {
	*x = BindFloatIpToInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_floatip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindFloatIpToInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindFloatIpToInstanceRes) ProtoMessage() {}

func (x *BindFloatIpToInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_floatip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindFloatIpToInstanceRes.ProtoReflect.Descriptor instead.
func (*BindFloatIpToInstanceRes) Descriptor() ([]byte, []int) {
	return file_floatip_proto_rawDescGZIP(), []int{1}
}

func (x *BindFloatIpToInstanceRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BindFloatIpToInstanceRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BindFloatIpToInstanceRes) GetFloatIp() string {
	if x != nil {
		return x.FloatIp
	}
	return ""
}

func (x *BindFloatIpToInstanceRes) GetBindedTime() string {
	if x != nil {
		return x.BindedTime
	}
	return ""
}

type RevokeFloatIpFromInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	InstanceId     string `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	FloatIp        string `protobuf:"bytes,5,opt,name=float_ip,json=floatIp,proto3" json:"float_ip,omitempty"`
}

func (x *RevokeFloatIpFromInstanceReq) Reset() {
	*x = RevokeFloatIpFromInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_floatip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeFloatIpFromInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeFloatIpFromInstanceReq) ProtoMessage() {}

func (x *RevokeFloatIpFromInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_floatip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeFloatIpFromInstanceReq.ProtoReflect.Descriptor instead.
func (*RevokeFloatIpFromInstanceReq) Descriptor() ([]byte, []int) {
	return file_floatip_proto_rawDescGZIP(), []int{2}
}

func (x *RevokeFloatIpFromInstanceReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *RevokeFloatIpFromInstanceReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RevokeFloatIpFromInstanceReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *RevokeFloatIpFromInstanceReq) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RevokeFloatIpFromInstanceReq) GetFloatIp() string {
	if x != nil {
		return x.FloatIp
	}
	return ""
}

type RevokeFloatIpFromInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg         string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RevokedTime string `protobuf:"bytes,3,opt,name=revoked_time,json=revokedTime,proto3" json:"revoked_time,omitempty"`
}

func (x *RevokeFloatIpFromInstanceRes) Reset() {
	*x = RevokeFloatIpFromInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_floatip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeFloatIpFromInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeFloatIpFromInstanceRes) ProtoMessage() {}

func (x *RevokeFloatIpFromInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_floatip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeFloatIpFromInstanceRes.ProtoReflect.Descriptor instead.
func (*RevokeFloatIpFromInstanceRes) Descriptor() ([]byte, []int) {
	return file_floatip_proto_rawDescGZIP(), []int{3}
}

func (x *RevokeFloatIpFromInstanceRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RevokeFloatIpFromInstanceRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RevokeFloatIpFromInstanceRes) GetRevokedTime() string {
	if x != nil {
		return x.RevokedTime
	}
	return ""
}

var File_floatip_proto protoreflect.FileDescriptor

var file_floatip_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x70, 0x22, 0xbd, 0x01, 0x0a, 0x18, 0x42, 0x69, 0x6e,
	0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x70, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x70, 0x63,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x18, 0x42, 0x69, 0x6e, 0x64,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x49,
	0x70, 0x22, 0x67, 0x0a, 0x1c, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x49, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xda, 0x01, 0x0a, 0x0e, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a,
	0x15, 0x42, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x54, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x70,
	0x2e, 0x42, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x54, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x69, 0x70, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x54,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x19,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x46, 0x72, 0x6f,
	0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x69, 0x70, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49,
	0x70, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x70, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_floatip_proto_rawDescOnce sync.Once
	file_floatip_proto_rawDescData = file_floatip_proto_rawDesc
)

func file_floatip_proto_rawDescGZIP() []byte {
	file_floatip_proto_rawDescOnce.Do(func() {
		file_floatip_proto_rawDescData = protoimpl.X.CompressGZIP(file_floatip_proto_rawDescData)
	})
	return file_floatip_proto_rawDescData
}

var file_floatip_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_floatip_proto_goTypes = []interface{}{
	(*BindFloatIpToInstanceReq)(nil),     // 0: floatip.BindFloatIpToInstanceReq
	(*BindFloatIpToInstanceRes)(nil),     // 1: floatip.BindFloatIpToInstanceRes
	(*RevokeFloatIpFromInstanceReq)(nil), // 2: floatip.RevokeFloatIpFromInstanceReq
	(*RevokeFloatIpFromInstanceRes)(nil), // 3: floatip.RevokeFloatIpFromInstanceRes
}
var file_floatip_proto_depIdxs = []int32{
	0, // 0: floatip.FloatIpService.BindFloatIpToInstance:input_type -> floatip.BindFloatIpToInstanceReq
	2, // 1: floatip.FloatIpService.RevokeFloatIpFromInstance:input_type -> floatip.RevokeFloatIpFromInstanceReq
	1, // 2: floatip.FloatIpService.BindFloatIpToInstance:output_type -> floatip.BindFloatIpToInstanceRes
	3, // 3: floatip.FloatIpService.RevokeFloatIpFromInstance:output_type -> floatip.RevokeFloatIpFromInstanceRes
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_floatip_proto_init() }
func file_floatip_proto_init() {
	if File_floatip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_floatip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindFloatIpToInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_floatip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindFloatIpToInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_floatip_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeFloatIpFromInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_floatip_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeFloatIpFromInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_floatip_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_floatip_proto_goTypes,
		DependencyIndexes: file_floatip_proto_depIdxs,
		MessageInfos:      file_floatip_proto_msgTypes,
	}.Build()
	File_floatip_proto = out.File
	file_floatip_proto_rawDesc = nil
	file_floatip_proto_goTypes = nil
	file_floatip_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FloatIpServiceClient is the client API for FloatIpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FloatIpServiceClient interface {
	//创建浮动ip并绑定到instance
	BindFloatIpToInstance(ctx context.Context, in *BindFloatIpToInstanceReq, opts ...grpc.CallOption) (*BindFloatIpToInstanceRes, error)
	//解绑浮动ip并回收
	RevokeFloatIpFromInstance(ctx context.Context, in *RevokeFloatIpFromInstanceReq, opts ...grpc.CallOption) (*RevokeFloatIpFromInstanceRes, error)
}

type floatIpServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFloatIpServiceClient(cc grpc.ClientConnInterface) FloatIpServiceClient {
	return &floatIpServiceClient{cc}
}

func (c *floatIpServiceClient) BindFloatIpToInstance(ctx context.Context, in *BindFloatIpToInstanceReq, opts ...grpc.CallOption) (*BindFloatIpToInstanceRes, error) {
	out := new(BindFloatIpToInstanceRes)
	err := c.cc.Invoke(ctx, "/floatip.FloatIpService/BindFloatIpToInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *floatIpServiceClient) RevokeFloatIpFromInstance(ctx context.Context, in *RevokeFloatIpFromInstanceReq, opts ...grpc.CallOption) (*RevokeFloatIpFromInstanceRes, error) {
	out := new(RevokeFloatIpFromInstanceRes)
	err := c.cc.Invoke(ctx, "/floatip.FloatIpService/RevokeFloatIpFromInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FloatIpServiceServer is the server API for FloatIpService service.
type FloatIpServiceServer interface {
	//创建浮动ip并绑定到instance
	BindFloatIpToInstance(context.Context, *BindFloatIpToInstanceReq) (*BindFloatIpToInstanceRes, error)
	//解绑浮动ip并回收
	RevokeFloatIpFromInstance(context.Context, *RevokeFloatIpFromInstanceReq) (*RevokeFloatIpFromInstanceRes, error)
}

// UnimplementedFloatIpServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFloatIpServiceServer struct {
}

func (*UnimplementedFloatIpServiceServer) BindFloatIpToInstance(context.Context, *BindFloatIpToInstanceReq) (*BindFloatIpToInstanceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindFloatIpToInstance not implemented")
}
func (*UnimplementedFloatIpServiceServer) RevokeFloatIpFromInstance(context.Context, *RevokeFloatIpFromInstanceReq) (*RevokeFloatIpFromInstanceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeFloatIpFromInstance not implemented")
}

func RegisterFloatIpServiceServer(s *grpc.Server, srv FloatIpServiceServer) {
	s.RegisterService(&_FloatIpService_serviceDesc, srv)
}

func _FloatIpService_BindFloatIpToInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindFloatIpToInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FloatIpServiceServer).BindFloatIpToInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/floatip.FloatIpService/BindFloatIpToInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FloatIpServiceServer).BindFloatIpToInstance(ctx, req.(*BindFloatIpToInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FloatIpService_RevokeFloatIpFromInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeFloatIpFromInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FloatIpServiceServer).RevokeFloatIpFromInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/floatip.FloatIpService/RevokeFloatIpFromInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FloatIpServiceServer).RevokeFloatIpFromInstance(ctx, req.(*RevokeFloatIpFromInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FloatIpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "floatip.FloatIpService",
	HandlerType: (*FloatIpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BindFloatIpToInstance",
			Handler:    _FloatIpService_BindFloatIpToInstance_Handler,
		},
		{
			MethodName: "RevokeFloatIpFromInstance",
			Handler:    _FloatIpService_RevokeFloatIpFromInstance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "floatip.proto",
}
