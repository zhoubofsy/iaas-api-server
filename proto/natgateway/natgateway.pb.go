// 指定的当前proto语法的版本，有2和3

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: natgateway.proto

// 指定文件生成出来的package

package natgateway

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NatGatewayRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg        string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NatGateway *NatGatewayRes_NatGateway `protobuf:"bytes,3,opt,name=nat_gateway,json=natGateway,proto3" json:"nat_gateway,omitempty"`
}

func (x *NatGatewayRes) Reset() {
	*x = NatGatewayRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natgateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NatGatewayRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatGatewayRes) ProtoMessage() {}

func (x *NatGatewayRes) ProtoReflect() protoreflect.Message {
	mi := &file_natgateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatGatewayRes.ProtoReflect.Descriptor instead.
func (*NatGatewayRes) Descriptor() ([]byte, []int) {
	return file_natgateway_proto_rawDescGZIP(), []int{0}
}

func (x *NatGatewayRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NatGatewayRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NatGatewayRes) GetNatGateway() *NatGatewayRes_NatGateway {
	if x != nil {
		return x.NatGateway
	}
	return nil
}

type CreateNatGatewayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey            string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId          string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid    string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	RouterId          string `protobuf:"bytes,4,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	ExternalNetworkId string `protobuf:"bytes,5,opt,name=external_network_id,json=externalNetworkId,proto3" json:"external_network_id,omitempty"`
}

func (x *CreateNatGatewayReq) Reset() {
	*x = CreateNatGatewayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natgateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNatGatewayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNatGatewayReq) ProtoMessage() {}

func (x *CreateNatGatewayReq) ProtoReflect() protoreflect.Message {
	mi := &file_natgateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNatGatewayReq.ProtoReflect.Descriptor instead.
func (*CreateNatGatewayReq) Descriptor() ([]byte, []int) {
	return file_natgateway_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNatGatewayReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *CreateNatGatewayReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateNatGatewayReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *CreateNatGatewayReq) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *CreateNatGatewayReq) GetExternalNetworkId() string {
	if x != nil {
		return x.ExternalNetworkId
	}
	return ""
}

type GetNatGatewayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	RouterId       string `protobuf:"bytes,4,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	GatewayId      string `protobuf:"bytes,5,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
}

func (x *GetNatGatewayReq) Reset() {
	*x = GetNatGatewayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natgateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNatGatewayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNatGatewayReq) ProtoMessage() {}

func (x *GetNatGatewayReq) ProtoReflect() protoreflect.Message {
	mi := &file_natgateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNatGatewayReq.ProtoReflect.Descriptor instead.
func (*GetNatGatewayReq) Descriptor() ([]byte, []int) {
	return file_natgateway_proto_rawDescGZIP(), []int{2}
}

func (x *GetNatGatewayReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *GetNatGatewayReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetNatGatewayReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *GetNatGatewayReq) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *GetNatGatewayReq) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type DeleteNatGatewayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	RouterId       string `protobuf:"bytes,4,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	GatewayId      string `protobuf:"bytes,5,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
}

func (x *DeleteNatGatewayReq) Reset() {
	*x = DeleteNatGatewayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natgateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNatGatewayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNatGatewayReq) ProtoMessage() {}

func (x *DeleteNatGatewayReq) ProtoReflect() protoreflect.Message {
	mi := &file_natgateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNatGatewayReq.ProtoReflect.Descriptor instead.
func (*DeleteNatGatewayReq) Descriptor() ([]byte, []int) {
	return file_natgateway_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteNatGatewayReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *DeleteNatGatewayReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeleteNatGatewayReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *DeleteNatGatewayReq) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *DeleteNatGatewayReq) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type DeleteNatGatewayRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg         string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RouterId    string `protobuf:"bytes,3,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	GatewayId   string `protobuf:"bytes,4,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	DeletedTime string `protobuf:"bytes,5,opt,name=deleted_time,json=deletedTime,proto3" json:"deleted_time,omitempty"`
}

func (x *DeleteNatGatewayRes) Reset() {
	*x = DeleteNatGatewayRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natgateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNatGatewayRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNatGatewayRes) ProtoMessage() {}

func (x *DeleteNatGatewayRes) ProtoReflect() protoreflect.Message {
	mi := &file_natgateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNatGatewayRes.ProtoReflect.Descriptor instead.
func (*DeleteNatGatewayRes) Descriptor() ([]byte, []int) {
	return file_natgateway_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteNatGatewayRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteNatGatewayRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteNatGatewayRes) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *DeleteNatGatewayRes) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *DeleteNatGatewayRes) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

type NatGatewayRes_NatGateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId         string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	RouterId          string `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	ExternalNetworkId string `protobuf:"bytes,3,opt,name=external_network_id,json=externalNetworkId,proto3" json:"external_network_id,omitempty"`
	EnableSnat        bool   `protobuf:"varint,4,opt,name=enable_snat,json=enableSnat,proto3" json:"enable_snat,omitempty"`
	ExternalFixedIp   string `protobuf:"bytes,5,opt,name=external_fixed_ip,json=externalFixedIp,proto3" json:"external_fixed_ip,omitempty"`
	CreatedTime       string `protobuf:"bytes,6,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
}

func (x *NatGatewayRes_NatGateway) Reset() {
	*x = NatGatewayRes_NatGateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natgateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NatGatewayRes_NatGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatGatewayRes_NatGateway) ProtoMessage() {}

func (x *NatGatewayRes_NatGateway) ProtoReflect() protoreflect.Message {
	mi := &file_natgateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatGatewayRes_NatGateway.ProtoReflect.Descriptor instead.
func (*NatGatewayRes_NatGateway) Descriptor() ([]byte, []int) {
	return file_natgateway_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NatGatewayRes_NatGateway) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *NatGatewayRes_NatGateway) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *NatGatewayRes_NatGateway) GetExternalNetworkId() string {
	if x != nil {
		return x.ExternalNetworkId
	}
	return ""
}

func (x *NatGatewayRes_NatGateway) GetEnableSnat() bool {
	if x != nil {
		return x.EnableSnat
	}
	return false
}

func (x *NatGatewayRes_NatGateway) GetExternalFixedIp() string {
	if x != nil {
		return x.ExternalFixedIp
	}
	return ""
}

func (x *NatGatewayRes_NatGateway) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

var File_natgateway_proto protoreflect.FileDescriptor

var file_natgateway_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0xe7,
	0x02, 0x0a, 0x0d, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x45, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x61,
	0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x2e, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x1a, 0xe8, 0x01,
	0x0a, 0x0a, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x83, 0x02, 0x0a, 0x11, 0x4e, 0x61,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4e, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x12, 0x1f, 0x2e, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x1c, 0x2e, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4e, 0x61, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1f, 0x2e,
	0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6e, 0x61, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_natgateway_proto_rawDescOnce sync.Once
	file_natgateway_proto_rawDescData = file_natgateway_proto_rawDesc
)

func file_natgateway_proto_rawDescGZIP() []byte {
	file_natgateway_proto_rawDescOnce.Do(func() {
		file_natgateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_natgateway_proto_rawDescData)
	})
	return file_natgateway_proto_rawDescData
}

var file_natgateway_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_natgateway_proto_goTypes = []interface{}{
	(*NatGatewayRes)(nil),            // 0: natgateway.NatGatewayRes
	(*CreateNatGatewayReq)(nil),      // 1: natgateway.CreateNatGatewayReq
	(*GetNatGatewayReq)(nil),         // 2: natgateway.GetNatGatewayReq
	(*DeleteNatGatewayReq)(nil),      // 3: natgateway.DeleteNatGatewayReq
	(*DeleteNatGatewayRes)(nil),      // 4: natgateway.DeleteNatGatewayRes
	(*NatGatewayRes_NatGateway)(nil), // 5: natgateway.NatGatewayRes.NatGateway
}
var file_natgateway_proto_depIdxs = []int32{
	5, // 0: natgateway.NatGatewayRes.nat_gateway:type_name -> natgateway.NatGatewayRes.NatGateway
	1, // 1: natgateway.NatGatewayService.CreateNatGateway:input_type -> natgateway.CreateNatGatewayReq
	2, // 2: natgateway.NatGatewayService.GetNatGateway:input_type -> natgateway.GetNatGatewayReq
	3, // 3: natgateway.NatGatewayService.DeleteNatGateway:input_type -> natgateway.DeleteNatGatewayReq
	0, // 4: natgateway.NatGatewayService.CreateNatGateway:output_type -> natgateway.NatGatewayRes
	0, // 5: natgateway.NatGatewayService.GetNatGateway:output_type -> natgateway.NatGatewayRes
	4, // 6: natgateway.NatGatewayService.DeleteNatGateway:output_type -> natgateway.DeleteNatGatewayRes
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_natgateway_proto_init() }
func file_natgateway_proto_init() {
	if File_natgateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_natgateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatGatewayRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natgateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNatGatewayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natgateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNatGatewayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natgateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNatGatewayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natgateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNatGatewayRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natgateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatGatewayRes_NatGateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_natgateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_natgateway_proto_goTypes,
		DependencyIndexes: file_natgateway_proto_depIdxs,
		MessageInfos:      file_natgateway_proto_msgTypes,
	}.Build()
	File_natgateway_proto = out.File
	file_natgateway_proto_rawDesc = nil
	file_natgateway_proto_goTypes = nil
	file_natgateway_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NatGatewayServiceClient is the client API for NatGatewayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NatGatewayServiceClient interface {
	//创建NAT网关
	CreateNatGateway(ctx context.Context, in *CreateNatGatewayReq, opts ...grpc.CallOption) (*NatGatewayRes, error)
	//获取NAT网关信息
	GetNatGateway(ctx context.Context, in *GetNatGatewayReq, opts ...grpc.CallOption) (*NatGatewayRes, error)
	//删除NAT网关
	DeleteNatGateway(ctx context.Context, in *DeleteNatGatewayReq, opts ...grpc.CallOption) (*DeleteNatGatewayRes, error)
}

type natGatewayServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNatGatewayServiceClient(cc grpc.ClientConnInterface) NatGatewayServiceClient {
	return &natGatewayServiceClient{cc}
}

func (c *natGatewayServiceClient) CreateNatGateway(ctx context.Context, in *CreateNatGatewayReq, opts ...grpc.CallOption) (*NatGatewayRes, error) {
	out := new(NatGatewayRes)
	err := c.cc.Invoke(ctx, "/natgateway.NatGatewayService/CreateNatGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natGatewayServiceClient) GetNatGateway(ctx context.Context, in *GetNatGatewayReq, opts ...grpc.CallOption) (*NatGatewayRes, error) {
	out := new(NatGatewayRes)
	err := c.cc.Invoke(ctx, "/natgateway.NatGatewayService/GetNatGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natGatewayServiceClient) DeleteNatGateway(ctx context.Context, in *DeleteNatGatewayReq, opts ...grpc.CallOption) (*DeleteNatGatewayRes, error) {
	out := new(DeleteNatGatewayRes)
	err := c.cc.Invoke(ctx, "/natgateway.NatGatewayService/DeleteNatGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NatGatewayServiceServer is the server API for NatGatewayService service.
type NatGatewayServiceServer interface {
	//创建NAT网关
	CreateNatGateway(context.Context, *CreateNatGatewayReq) (*NatGatewayRes, error)
	//获取NAT网关信息
	GetNatGateway(context.Context, *GetNatGatewayReq) (*NatGatewayRes, error)
	//删除NAT网关
	DeleteNatGateway(context.Context, *DeleteNatGatewayReq) (*DeleteNatGatewayRes, error)
}

// UnimplementedNatGatewayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNatGatewayServiceServer struct {
}

func (*UnimplementedNatGatewayServiceServer) CreateNatGateway(context.Context, *CreateNatGatewayReq) (*NatGatewayRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNatGateway not implemented")
}
func (*UnimplementedNatGatewayServiceServer) GetNatGateway(context.Context, *GetNatGatewayReq) (*NatGatewayRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNatGateway not implemented")
}
func (*UnimplementedNatGatewayServiceServer) DeleteNatGateway(context.Context, *DeleteNatGatewayReq) (*DeleteNatGatewayRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNatGateway not implemented")
}

func RegisterNatGatewayServiceServer(s *grpc.Server, srv NatGatewayServiceServer) {
	s.RegisterService(&_NatGatewayService_serviceDesc, srv)
}

func _NatGatewayService_CreateNatGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNatGatewayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatGatewayServiceServer).CreateNatGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natgateway.NatGatewayService/CreateNatGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatGatewayServiceServer).CreateNatGateway(ctx, req.(*CreateNatGatewayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatGatewayService_GetNatGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNatGatewayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatGatewayServiceServer).GetNatGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natgateway.NatGatewayService/GetNatGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatGatewayServiceServer).GetNatGateway(ctx, req.(*GetNatGatewayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NatGatewayService_DeleteNatGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNatGatewayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NatGatewayServiceServer).DeleteNatGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/natgateway.NatGatewayService/DeleteNatGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NatGatewayServiceServer).DeleteNatGateway(ctx, req.(*DeleteNatGatewayReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NatGatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "natgateway.NatGatewayService",
	HandlerType: (*NatGatewayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNatGateway",
			Handler:    _NatGatewayService_CreateNatGateway_Handler,
		},
		{
			MethodName: "GetNatGateway",
			Handler:    _NatGatewayService_GetNatGateway_Handler,
		},
		{
			MethodName: "DeleteNatGateway",
			Handler:    _NatGatewayService_DeleteNatGateway_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "natgateway.proto",
}
