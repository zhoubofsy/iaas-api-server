// 指定的当前proto语法的版本，有2和3

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: vpc.proto

// 指定文件生成出来的package

package vpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VpcRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Vpc  *VpcRes_Vpc `protobuf:"bytes,3,opt,name=vpc,proto3" json:"vpc,omitempty"`
}

func (x *VpcRes) Reset() {
	*x = VpcRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcRes) ProtoMessage() {}

func (x *VpcRes) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcRes.ProtoReflect.Descriptor instead.
func (*VpcRes) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0}
}

func (x *VpcRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VpcRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VpcRes) GetVpc() *VpcRes_Vpc {
	if x != nil {
		return x.Vpc
	}
	return nil
}

type CreateVpcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	VpcName        string `protobuf:"bytes,4,opt,name=vpc_name,json=vpcName,proto3" json:"vpc_name,omitempty"`
	VpcDesc        string `protobuf:"bytes,5,opt,name=vpc_desc,json=vpcDesc,proto3" json:"vpc_desc,omitempty"`
	Region         string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Subnet         string `protobuf:"bytes,7,opt,name=subnet,proto3" json:"subnet,omitempty"`
}

func (x *CreateVpcReq) Reset() {
	*x = CreateVpcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpcReq) ProtoMessage() {}

func (x *CreateVpcReq) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpcReq.ProtoReflect.Descriptor instead.
func (*CreateVpcReq) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVpcReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *CreateVpcReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateVpcReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *CreateVpcReq) GetVpcName() string {
	if x != nil {
		return x.VpcName
	}
	return ""
}

func (x *CreateVpcReq) GetVpcDesc() string {
	if x != nil {
		return x.VpcDesc
	}
	return ""
}

func (x *CreateVpcReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateVpcReq) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

type GetVpcInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	VpcId          string `protobuf:"bytes,4,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *GetVpcInfoReq) Reset() {
	*x = GetVpcInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVpcInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVpcInfoReq) ProtoMessage() {}

func (x *GetVpcInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVpcInfoReq.ProtoReflect.Descriptor instead.
func (*GetVpcInfoReq) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetVpcInfoReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *GetVpcInfoReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetVpcInfoReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *GetVpcInfoReq) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

type SetVpcInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apikey         string `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty"`
	TenantId       string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PlatformUserid string `protobuf:"bytes,3,opt,name=platform_userid,json=platformUserid,proto3" json:"platform_userid,omitempty"`
	VpcId          string `protobuf:"bytes,4,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	VpcName        string `protobuf:"bytes,5,opt,name=vpc_name,json=vpcName,proto3" json:"vpc_name,omitempty"`
	VpcDesc        string `protobuf:"bytes,6,opt,name=vpc_desc,json=vpcDesc,proto3" json:"vpc_desc,omitempty"`
}

func (x *SetVpcInfoReq) Reset() {
	*x = SetVpcInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVpcInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVpcInfoReq) ProtoMessage() {}

func (x *SetVpcInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVpcInfoReq.ProtoReflect.Descriptor instead.
func (*SetVpcInfoReq) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{3}
}

func (x *SetVpcInfoReq) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *SetVpcInfoReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SetVpcInfoReq) GetPlatformUserid() string {
	if x != nil {
		return x.PlatformUserid
	}
	return ""
}

func (x *SetVpcInfoReq) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *SetVpcInfoReq) GetVpcName() string {
	if x != nil {
		return x.VpcName
	}
	return ""
}

func (x *SetVpcInfoReq) GetVpcDesc() string {
	if x != nil {
		return x.VpcDesc
	}
	return ""
}

type VpcRes_Vpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId          string               `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	VpcName        string               `protobuf:"bytes,2,opt,name=vpc_name,json=vpcName,proto3" json:"vpc_name,omitempty"`
	VpcDesc        string               `protobuf:"bytes,3,opt,name=vpc_desc,json=vpcDesc,proto3" json:"vpc_desc,omitempty"`
	Region         string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Subnet         []*VpcRes_Vpc_Subnet `protobuf:"bytes,5,rep,name=subnet,proto3" json:"subnet,omitempty"`
	VpcStatus      string               `protobuf:"bytes,6,opt,name=vpc_status,json=vpcStatus,proto3" json:"vpc_status,omitempty"`
	VpcCreatedTime string               `protobuf:"bytes,7,opt,name=vpc_created_time,json=vpcCreatedTime,proto3" json:"vpc_created_time,omitempty"`
	Router         *VpcRes_Vpc_Router   `protobuf:"bytes,8,opt,name=router,proto3" json:"router,omitempty"`
}

func (x *VpcRes_Vpc) Reset() {
	*x = VpcRes_Vpc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcRes_Vpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcRes_Vpc) ProtoMessage() {}

func (x *VpcRes_Vpc) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcRes_Vpc.ProtoReflect.Descriptor instead.
func (*VpcRes_Vpc) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *VpcRes_Vpc) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *VpcRes_Vpc) GetVpcName() string {
	if x != nil {
		return x.VpcName
	}
	return ""
}

func (x *VpcRes_Vpc) GetVpcDesc() string {
	if x != nil {
		return x.VpcDesc
	}
	return ""
}

func (x *VpcRes_Vpc) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *VpcRes_Vpc) GetSubnet() []*VpcRes_Vpc_Subnet {
	if x != nil {
		return x.Subnet
	}
	return nil
}

func (x *VpcRes_Vpc) GetVpcStatus() string {
	if x != nil {
		return x.VpcStatus
	}
	return ""
}

func (x *VpcRes_Vpc) GetVpcCreatedTime() string {
	if x != nil {
		return x.VpcCreatedTime
	}
	return ""
}

func (x *VpcRes_Vpc) GetRouter() *VpcRes_Vpc_Router {
	if x != nil {
		return x.Router
	}
	return nil
}

type VpcRes_Vpc_Subnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subnet            string `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	SubnetId          string `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	SubnetCreatedTime string `protobuf:"bytes,3,opt,name=subnet_created_time,json=subnetCreatedTime,proto3" json:"subnet_created_time,omitempty"`
}

func (x *VpcRes_Vpc_Subnet) Reset() {
	*x = VpcRes_Vpc_Subnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcRes_Vpc_Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcRes_Vpc_Subnet) ProtoMessage() {}

func (x *VpcRes_Vpc_Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcRes_Vpc_Subnet.ProtoReflect.Descriptor instead.
func (*VpcRes_Vpc_Subnet) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *VpcRes_Vpc_Subnet) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *VpcRes_Vpc_Subnet) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *VpcRes_Vpc_Subnet) GetSubnetCreatedTime() string {
	if x != nil {
		return x.SubnetCreatedTime
	}
	return ""
}

type VpcRes_Vpc_Router struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterId          string                    `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	RouterName        string                    `protobuf:"bytes,2,opt,name=router_name,json=routerName,proto3" json:"router_name,omitempty"`
	RouterCreatedTime string                    `protobuf:"bytes,3,opt,name=router_created_time,json=routerCreatedTime,proto3" json:"router_created_time,omitempty"`
	Intfs             []*VpcRes_Vpc_Router_Intf `protobuf:"bytes,4,rep,name=Intfs,proto3" json:"Intfs,omitempty"`
}

func (x *VpcRes_Vpc_Router) Reset() {
	*x = VpcRes_Vpc_Router{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcRes_Vpc_Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcRes_Vpc_Router) ProtoMessage() {}

func (x *VpcRes_Vpc_Router) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcRes_Vpc_Router.ProtoReflect.Descriptor instead.
func (*VpcRes_Vpc_Router) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *VpcRes_Vpc_Router) GetRouterId() string {
	if x != nil {
		return x.RouterId
	}
	return ""
}

func (x *VpcRes_Vpc_Router) GetRouterName() string {
	if x != nil {
		return x.RouterName
	}
	return ""
}

func (x *VpcRes_Vpc_Router) GetRouterCreatedTime() string {
	if x != nil {
		return x.RouterCreatedTime
	}
	return ""
}

func (x *VpcRes_Vpc_Router) GetIntfs() []*VpcRes_Vpc_Router_Intf {
	if x != nil {
		return x.Intfs
	}
	return nil
}

type VpcRes_Vpc_Router_Intf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntfId          string `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
	IntfName        string `protobuf:"bytes,2,opt,name=intf_name,json=intfName,proto3" json:"intf_name,omitempty"`
	IntfIp          string `protobuf:"bytes,3,opt,name=intf_ip,json=intfIp,proto3" json:"intf_ip,omitempty"`
	SubnetId        string `protobuf:"bytes,4,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	IntfCreatedTime string `protobuf:"bytes,5,opt,name=intf_created_time,json=intfCreatedTime,proto3" json:"intf_created_time,omitempty"`
}

func (x *VpcRes_Vpc_Router_Intf) Reset() {
	*x = VpcRes_Vpc_Router_Intf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcRes_Vpc_Router_Intf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcRes_Vpc_Router_Intf) ProtoMessage() {}

func (x *VpcRes_Vpc_Router_Intf) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcRes_Vpc_Router_Intf.ProtoReflect.Descriptor instead.
func (*VpcRes_Vpc_Router_Intf) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *VpcRes_Vpc_Router_Intf) GetIntfId() string {
	if x != nil {
		return x.IntfId
	}
	return ""
}

func (x *VpcRes_Vpc_Router_Intf) GetIntfName() string {
	if x != nil {
		return x.IntfName
	}
	return ""
}

func (x *VpcRes_Vpc_Router_Intf) GetIntfIp() string {
	if x != nil {
		return x.IntfIp
	}
	return ""
}

func (x *VpcRes_Vpc_Router_Intf) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *VpcRes_Vpc_Router_Intf) GetIntfCreatedTime() string {
	if x != nil {
		return x.IntfCreatedTime
	}
	return ""
}

var File_vpc_proto protoreflect.FileDescriptor

var file_vpc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x76, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x76, 0x70, 0x63,
	0x22, 0xa3, 0x06, 0x0a, 0x06, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x21, 0x0a, 0x03, 0x76, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x2e, 0x56, 0x70, 0x63, 0x52,
	0x03, 0x76, 0x70, 0x63, 0x1a, 0xcf, 0x05, 0x0a, 0x03, 0x56, 0x70, 0x63, 0x12, 0x15, 0x0a, 0x06,
	0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70,
	0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x70, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x70, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x2e, 0x56,
	0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x70, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x76, 0x70, 0x63, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x70, 0x63, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x2e, 0x56, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x1a, 0x6d, 0x0a, 0x06, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xca, 0x02, 0x0a, 0x06, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x2e, 0x56,
	0x70, 0x63, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x05,
	0x49, 0x6e, 0x74, 0x66, 0x73, 0x1a, 0x9e, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x74, 0x66, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x66, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e,
	0x74, 0x66, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x66, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x70, 0x63, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x76,
	0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63,
	0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x63,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x63, 0x44, 0x65, 0x73, 0x63, 0x32,
	0x97, 0x01, 0x0a, 0x0a, 0x56, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x63, 0x12, 0x11, 0x2e, 0x76, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x76, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e,
	0x76, 0x70, 0x63, 0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x74, 0x56, 0x70, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x76,
	0x70, 0x63, 0x2e, 0x56, 0x70, 0x63, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_vpc_proto_rawDescOnce sync.Once
	file_vpc_proto_rawDescData = file_vpc_proto_rawDesc
)

func file_vpc_proto_rawDescGZIP() []byte {
	file_vpc_proto_rawDescOnce.Do(func() {
		file_vpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_vpc_proto_rawDescData)
	})
	return file_vpc_proto_rawDescData
}

var file_vpc_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_vpc_proto_goTypes = []interface{}{
	(*VpcRes)(nil),                 // 0: vpc.VpcRes
	(*CreateVpcReq)(nil),           // 1: vpc.CreateVpcReq
	(*GetVpcInfoReq)(nil),          // 2: vpc.GetVpcInfoReq
	(*SetVpcInfoReq)(nil),          // 3: vpc.SetVpcInfoReq
	(*VpcRes_Vpc)(nil),             // 4: vpc.VpcRes.Vpc
	(*VpcRes_Vpc_Subnet)(nil),      // 5: vpc.VpcRes.Vpc.Subnet
	(*VpcRes_Vpc_Router)(nil),      // 6: vpc.VpcRes.Vpc.Router
	(*VpcRes_Vpc_Router_Intf)(nil), // 7: vpc.VpcRes.Vpc.Router.Intf
}
var file_vpc_proto_depIdxs = []int32{
	4, // 0: vpc.VpcRes.vpc:type_name -> vpc.VpcRes.Vpc
	5, // 1: vpc.VpcRes.Vpc.subnet:type_name -> vpc.VpcRes.Vpc.Subnet
	6, // 2: vpc.VpcRes.Vpc.router:type_name -> vpc.VpcRes.Vpc.Router
	7, // 3: vpc.VpcRes.Vpc.Router.Intfs:type_name -> vpc.VpcRes.Vpc.Router.Intf
	1, // 4: vpc.VpcService.CreateVpc:input_type -> vpc.CreateVpcReq
	2, // 5: vpc.VpcService.GetVpcInfo:input_type -> vpc.GetVpcInfoReq
	3, // 6: vpc.VpcService.SetVpcInfo:input_type -> vpc.SetVpcInfoReq
	0, // 7: vpc.VpcService.CreateVpc:output_type -> vpc.VpcRes
	0, // 8: vpc.VpcService.GetVpcInfo:output_type -> vpc.VpcRes
	0, // 9: vpc.VpcService.SetVpcInfo:output_type -> vpc.VpcRes
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_vpc_proto_init() }
func file_vpc_proto_init() {
	if File_vpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVpcInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVpcInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcRes_Vpc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcRes_Vpc_Subnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcRes_Vpc_Router); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcRes_Vpc_Router_Intf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vpc_proto_goTypes,
		DependencyIndexes: file_vpc_proto_depIdxs,
		MessageInfos:      file_vpc_proto_msgTypes,
	}.Build()
	File_vpc_proto = out.File
	file_vpc_proto_rawDesc = nil
	file_vpc_proto_goTypes = nil
	file_vpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VpcServiceClient is the client API for VpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VpcServiceClient interface {
	//创建vpc
	CreateVpc(ctx context.Context, in *CreateVpcReq, opts ...grpc.CallOption) (*VpcRes, error)
	//查看vpc信息
	GetVpcInfo(ctx context.Context, in *GetVpcInfoReq, opts ...grpc.CallOption) (*VpcRes, error)
	//修改vpc信息
	SetVpcInfo(ctx context.Context, in *SetVpcInfoReq, opts ...grpc.CallOption) (*VpcRes, error)
}

type vpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVpcServiceClient(cc grpc.ClientConnInterface) VpcServiceClient {
	return &vpcServiceClient{cc}
}

func (c *vpcServiceClient) CreateVpc(ctx context.Context, in *CreateVpcReq, opts ...grpc.CallOption) (*VpcRes, error) {
	out := new(VpcRes)
	err := c.cc.Invoke(ctx, "/vpc.VpcService/CreateVpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcServiceClient) GetVpcInfo(ctx context.Context, in *GetVpcInfoReq, opts ...grpc.CallOption) (*VpcRes, error) {
	out := new(VpcRes)
	err := c.cc.Invoke(ctx, "/vpc.VpcService/GetVpcInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcServiceClient) SetVpcInfo(ctx context.Context, in *SetVpcInfoReq, opts ...grpc.CallOption) (*VpcRes, error) {
	out := new(VpcRes)
	err := c.cc.Invoke(ctx, "/vpc.VpcService/SetVpcInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VpcServiceServer is the server API for VpcService service.
type VpcServiceServer interface {
	//创建vpc
	CreateVpc(context.Context, *CreateVpcReq) (*VpcRes, error)
	//查看vpc信息
	GetVpcInfo(context.Context, *GetVpcInfoReq) (*VpcRes, error)
	//修改vpc信息
	SetVpcInfo(context.Context, *SetVpcInfoReq) (*VpcRes, error)
}

// UnimplementedVpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVpcServiceServer struct {
}

func (*UnimplementedVpcServiceServer) CreateVpc(context.Context, *CreateVpcReq) (*VpcRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVpc not implemented")
}
func (*UnimplementedVpcServiceServer) GetVpcInfo(context.Context, *GetVpcInfoReq) (*VpcRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVpcInfo not implemented")
}
func (*UnimplementedVpcServiceServer) SetVpcInfo(context.Context, *SetVpcInfoReq) (*VpcRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVpcInfo not implemented")
}

func RegisterVpcServiceServer(s *grpc.Server, srv VpcServiceServer) {
	s.RegisterService(&_VpcService_serviceDesc, srv)
}

func _VpcService_CreateVpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVpcReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServiceServer).CreateVpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VpcService/CreateVpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServiceServer).CreateVpc(ctx, req.(*CreateVpcReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VpcService_GetVpcInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVpcInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServiceServer).GetVpcInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VpcService/GetVpcInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServiceServer).GetVpcInfo(ctx, req.(*GetVpcInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VpcService_SetVpcInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVpcInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServiceServer).SetVpcInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VpcService/SetVpcInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServiceServer).SetVpcInfo(ctx, req.(*SetVpcInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _VpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vpc.VpcService",
	HandlerType: (*VpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVpc",
			Handler:    _VpcService_CreateVpc_Handler,
		},
		{
			MethodName: "GetVpcInfo",
			Handler:    _VpcService_GetVpcInfo_Handler,
		},
		{
			MethodName: "SetVpcInfo",
			Handler:    _VpcService_SetVpcInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vpc.proto",
}
